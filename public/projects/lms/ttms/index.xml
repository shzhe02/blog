<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Project TTMS on cornerboxes</title>
    <link>https://cornerboxes.com/projects/lms/ttms/</link>
    <description>Recent content in Project TTMS on cornerboxes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://cornerboxes.com/projects/lms/ttms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Part 1] Core Concepts &amp; Evaluations</title>
      <link>https://cornerboxes.com/projects/lms/ttms/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cornerboxes.com/projects/lms/ttms/1/</guid>
      <description>Core Concepts Before starting with this project, I want to cover some core concepts I want. Namely:
Ease of use All commonly-performed things (e.g., adding a task, scheduling a task) should be the easiest things to do in the app. Reducing usage difficulty is key to making me stick to using it. Out of sight, out of mind. I tend to get easily distracted by what I should be doing due to excess information.</description>
      <content:encoded><![CDATA[<h1 id="core-concepts">Core Concepts</h1>
<p>Before starting with this project, I want to cover some core concepts I want. Namely:</p>
<ul>
<li>Ease of use
<ul>
<li>All commonly-performed things (e.g., adding a task, scheduling a task) should be the easiest things to do in the app.</li>
<li>Reducing usage difficulty is key to making me stick to using it.</li>
</ul>
</li>
<li>Out of sight, out of mind.
<ul>
<li>I tend to get easily distracted by what I should be doing due to excess information. Thus, for dashboards or similar screens where I only need to be aware of what I need to do next, all events that I can do nothing about should be hidden away or made less prominent.</li>
<li>The inverse is true. For example, on a task management screen, I want all the tasks I am able to complete right now to be visible so that I am aware of their existence.</li>
</ul>
</li>
<li>Multilevel Prioritization
<ul>
<li>I like to have at least two levels of priority. An example of this &ldquo;multilevel&rdquo; prioritization is having two categories, personal projects and schoolwork. Obviously, schoolwork is prioritized over personal projects. Within the schoolwork category, there could be my assignments which are prioritized by deadline or difficulty (or both), while within the personal projects category, there could be &ldquo;IoT alarm clock&rdquo; and &ldquo;Desk lamp, &quot; which are prioritized as I see fit.</li>
<li>I feel like this is necessary because I have many categories of tasks in my life, and having to prioritize all tasks in one prioritization level makes things messy.</li>
</ul>
</li>
<li>Creation + Scheduling separation
<ul>
<li>For me, I notice that I tend to have two modes when it comes to creating tasks: idea mode and scheduling mode. In idea mode, I come up with tons of discrete tasks, while in scheduling mode, I figure out when I want to execute those tasks. I think it is important to keep these two separate, as when I come up with tasks, I&rsquo;m often in situations where I don&rsquo;t want to dwell on the idea for too long (commuting, in the middle of another task, etc). Therefore, if I have to schedule it, I might do it hastily, or worse, I would skip marking the idea down altogether as it is too much of a hassle.</li>
</ul>
</li>
<li>Subtasks
<ul>
<li>I feel like it&rsquo;s important to have subtasks because one major way to reduce the friction when starting a task is to break a task down into smaller pieces. However, if I simply turn all subtasks into full tasks, it makes the system very cluttered.</li>
</ul>
</li>
</ul>
<h1 id="evaluation">Evaluation</h1>
<p>Using the core concepts discussed earlier, I will now walk through some existing systems I have attempted to use. This is going to be how I&rsquo;ll isolate some good ideas from things I have already used.</p>
<h2 id="primitive-systems">Primitive Systems</h2>
<p>These are very general concepts that have many different implementations. They can be implemented digitally or with pen and paper.</p>
<h3 id="to-do-lists">To-Do Lists</h3>
<p>Pros:</p>
<ul>
<li>Super easy to set up (both digitally and with pen and paper)</li>
<li>Easy subtasks with indentation</li>
<li>Good separation between creating and assigning tasks
<ul>
<li>No need to assign a time to the task on creation</li>
</ul>
</li>
</ul>
<p>Cons:</p>
<ul>
<li>Primarily one level of prioritization (higher up on the list = higher priority)
<ul>
<li>The only way to achieve quasi-multilevel priority is to have multiple to-do lists. However, this affects the &ldquo;out of sight, out of mind&rdquo; concept.</li>
</ul>
</li>
<li>Scheduling is not so easy and unintuitive.
<ul>
<li>When marking down a date and time along with the task, I have to mentally compare the deadline with the other tasks in the list and sort them chronologically mentally. Additionally, when done digitally, it takes quite a few clicks to set the date and time.</li>
</ul>
</li>
</ul>
<h3 id="kanban-boards">Kanban Boards</h3>
<p>Pros:</p>
<ul>
<li>My favorite visuals-wise.</li>
<li>Multilevel priority is possible
<ul>
<li>different columns = different upper priority</li>
<li>how high the card is = higher priority within the column</li>
</ul>
</li>
<li>Good separation between creating and assigning tasks for the same reason as for to-do lists.</li>
</ul>
<p>Cons:</p>
<ul>
<li>Subtasks are not easy because you can&rsquo;t really nest cards.</li>
<li>Scheduling is not easy or intuitive, for the same reasons as the to-do list.</li>
</ul>
<h3 id="calendar">Calendar</h3>
<p>Pros:</p>
<ul>
<li>Task scheduling is very easy to do and to reference because I don&rsquo;t need to mentally process any dates and times, just look at the calendar.</li>
</ul>
<p>Cons:</p>
<ul>
<li>No prioritization besides chronological ordering.</li>
<li>No separation between creating and scheduling tasks (time and date is required on task creation)</li>
<li>No subtasks</li>
<li>Either restricted view or overwhelming view
<ul>
<li>If viewing the whole month, there might be too much information, but viewing the week means you might be blindsided by a huge assignment due in the beginning of the next week.</li>
</ul>
</li>
</ul>
<h2 id="higher-level-systems">Higher-level Systems</h2>
<p>These are systems that are more like a complete service, developed by a company rather than being a concept.</p>
<h3 id="notion">Notion</h3>
<p>This is a bit more tricky to create pros and cons for because of the sheer flexibility of the system. If it isn&rsquo;t doing what you want it to do, there is always something you can do to improve it.</p>
<p>Pros:</p>
<ul>
<li>Immense flexibility, allows for the use of multiple primitive systems and tasks can be dragged across them.</li>
<li>Very easy to use.</li>
<li>Cloud synced</li>
</ul>
<p>Cons:</p>
<ul>
<li>Long setup
<ul>
<li>It&rsquo;s easy to have a general system put together, but fine-tuning it to fit my exact needs takes a lot of time.</li>
</ul>
</li>
<li>Blocks are not very integrated together.
<ul>
<li>I can set views for the same database, but dragging cards between primitive systems only moves the task, and I cannot implement more complex behavior.</li>
</ul>
</li>
<li>Some fairly basic features are not to my taste, for example, recurring tasks aren&rsquo;t very simple to set up.</li>
<li>I personally don&rsquo;t like how my data is not completely under my control.</li>
</ul>
<h1 id="stolen-concepts">Stolen Concepts</h1>
<p>From the previously evaluated concepts, I have grasped a few ideas.</p>
<ul>
<li>I believe that the kanban board can be used to essentially perform all the tasks of a to-do list and do them better. I also like how the kanban board better utilizes the 2D space of a screen, while to-do lists waste a good part of the right side of the screen.</li>
<li>I think that the calendar is essentially the gold standard in terms of scheduling. There is no beating a calendar view when it comes to figuring out how things are scheduled at a glance.</li>
<li>I really like Notion&rsquo;s interoperability between its primitive systems. Being able to drag and drop a task from a kanban into a calendar is a workflow I quite like.</li>
</ul>
<p>From this, I am more or less certain that the main TTMS interface will revolve around a hybrid interface consisting of a kanban board and a calendar, where tasks on the board are displayed both on the kanban board and the calendar.</p>
<h1 id="old-schedule">Old Schedule</h1>
<pre class="mermaid">gantt
    dateFormat  YYYY-MM-DD
    title       Project TTMS Schedule
    todayMarker off

    section Planning Stage
    Analyzing existing systems          :crit, 2023-09-24, 4d
    Analyzing digital advantages        :crit, 3d
    Reflection                          :crit, 2d
    Creating list of values             :crit, 1d
    Creating system requirements        :crit, 2d
    Creating technical requirements     :crit, 5d

    section Prototyping Stage
    Client prototype v0.1               :2023-09-28, 5d
    Server prototype v0.1               :2023-10-01, 3d
    Client prototype v0.2               :5d
    Client prototype v0.3               :2023-10-11, 10d
    Server prototype v0.2               :2023-10-11, 5d

    section Finalization Stage
    Desktop interface v1                :crit, 2023-10-21, 15d
    Server v1                           :crit, 2023-10-21, 5d
    Mobile interface v1                 :crit, 2023-10-26, 10d
    Tablet interface v1                 :2023-10-30, 5d


    section Documentation stage
    Client setup documentation          :2023-10-30, 3d
    Server setup documentation          :2023-11-02, 3d
</pre>
<p>Due to poor time management, the above was not met at all.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
